author: theophile.dev
core-version: 5.3.6
dependents: $:/plugins/theophile.dev/plugin-maker
description: Tiddlyhost Plugin Library
list: readme settings faq packager
plugin-type: plugin
stability: STABILITY_1_EXPERIMENTAL
title: $:/plugins/theophile.dev/tiddlyhostpluginlibrary
type: application/json
version: 0.0.6

{"tiddlers":{"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/PluginsIncluded":{"text":"<$let qualified-state=<<qualify \"$:/state/plugin-info\">> >\n<$list filter={{$:/plugins/theophile.dev/tiddlyhostpluginlibrary/assetList!!filter}} emptyMessage=<<lingo \"Empty/Hint\">>  template=\"$:/core/ui/Components/plugin-info\"/>\n</$let>","tags":"$:/plugins/theophile.dev/tiddlyhostpluginlibrary"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/assetList":{"text":"\\procedure asset()\n<$wikify name=\"image\" text={{{ [{!!title}addsuffix[/icon]get[text]] }}}  mode=\"inline\" output=\"html\">\n<$let\n  fields=\"title name description parent-plugin dependents stability version plugin-type requires-reload\"\n  type={{!!type}}\n  uri={{!!_canonical_uri}}\n  external=`$(uri)$`\n  base64=`data:${[{!!type}]}$;base64,$(image)$`\n  svg=`data:image/svg+xml;utf8,<svg width=\"22pt\" height=\"22pt\" xmlns=\"http://www.w3.org/2000/svg\">${[<image>get[text]else<image>search-replace:g[#],[%23]search-replace:g[\n],[]]}$</svg>`\n  icon={{{  [<uri>!is[blank]then<external>]~[<image>search[svg]then<svg>]~[<base64>] :filter[<..currentTiddler>addsuffix[/icon]get[title]] }}}\n  readme={{{ [{!!title}addsuffix[/readme]get[text]] }}}\n>\n<$genesis \n  $type=\"$jsontiddler\"\n  tiddler={{!!title}}\n  exclude={{{ [{!!title}fields:exclude<fields>format:titlelist[]join[ ]] }}}\n  $names=\"\n  =[<readme>!is[blank]then[$readme]]\n  =[<icon>!is[blank]then[$icon]]\n  \"\n$values=\"\n  =[<readme>!is[blank]]\n  =[<icon>!is[blank]]\n\"/>\n</$let>\n</$wikify>\n\\end\n<$list filter={{$:/plugins/theophile.dev/tiddlyhostpluginlibrary/assetList!!filter}} join=\",\"><<asset>></$list>\n\n","tags":"$:/plugins/theophile.dev/tiddlyhostpluginlibrary","code-body":"yes","filter":"[has[plugin-type]author{$:/status/UserName}]"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq":{"text":"<$list filter=\"[all[tiddlers+shadows]tag[$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq]]\">\n<details><summary>{{!!caption}}</summary>\n\n<$transclude mode=\"block\" />","tags":"$:/plugins/theophile.dev/tiddlyhostpluginlibrary"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq/how":{"text":"The tag <<tag $:/tags/RawMarkupWikified/TopHead>> is used to insert the necessary JavaScript directly into the `<head>` section of the TiddlyWiki file. You can view the code by visiting this URL: `view-source:https://plugin-library.tiddlyhost.com` (<kbd>Ctrl + U</kbd>).\n\n* When you click “Open plugin library,” TiddlyWiki sends a GET request to the library’s URL (e.g., {{$:/config/OfficialPluginLibrary!!url}} for the official plugin library).\n* The library responds with a list of available plugins (in this case, defined in the [[assetList|$:/plugins/theophile.dev/tiddlyhostpluginlibrary/assetList]] tiddler)\n* TiddlyWiki then displays this list to allow you to choose a plugin to install.\n* When you select a plugin to install, TiddlyWiki makes another request, specifying the plugin. The library fetches the content of the plugin and sends it back to TiddlyWiki.\n* Instead of fetching the plugin file from the same directory as the library, the script redirects to the [[JSON endpoint provided by Tiddlyhost|https://github.com/tiddlyhost/tiddlyhost-com/wiki/Accessing-Tiddlyhost-data-as-JSON]].","tags":"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq $:/plugins/theophile.dev/tiddlyhostpluginlibrary","caption":"How does this work ?"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq/library":{"text":"<a href=`https://tiddlyhost.com/sites/new?clone=plugin-library`>Clone this wiki</a> to create your own tiddlyhost plugin library. You must allow the wiki to be loaded inside an iframe; otherwise, it will not work:\n\n[img[allow-iframe.png]]\n\nYou can provide feedback and ask for help [[on Talk TiddlyWiki|https://talk.tiddlywiki.org/t/how-to-create-a-plugin-library-with-one-click/11245]].\n\nPlease note: while this is one of the easiest way to create a plugin library, since everything is contained into one file, the more plugins you add to the library, the slower it will become. If this become an issue, use the standard plugin library setup.","tags":"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq $:/plugins/theophile.dev/tiddlyhostpluginlibrary","caption":"How can I create my own tiddlyhost plugin library ?"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq/plugin":{"text":"!! Creating a plugin with the [ext[packager|https://plugin-library.tiddlyhost.com/#%24%3A%2Fplugins%2Ftheophile.dev%2Fplugin-maker]]\n\n# Open the [[packager|$:/plugins/theophile.dev/tiddlyhostpluginlibrary/packager]]\n# Fill the form\n# Click on the button to package or update the plugin\n\nIf you need a more advanced tool, use [ext[gatha|https://kookma.github.io/TW-Gatha]].\n\n\n!! Creating a plugin manually\n\n# Create your tiddlers. Use the same prefix for each tiddlers if possible, e.g : $:/plugins/theophile.dev/tiddlyhostpluginlibrary\n# Drag and drop the tiddlers in another wiki, for example https://tiddlywiki.com/empty\n# This will open the `$:/Import` tiddler. ''Do not'' click on the \"import\" button. Instead, edit it\n# Rename it with the prefix you choose for your tiddlers\n# Set the value of the field `plugin-type` to `plugin`\n# Remove the field `status`\n# Add a `list` field. Tiddlers with the plugin prefix + the names in the list field will be displayed on the plugin UI, e.g : $:/plugins/theophile.dev/tiddlyhostpluginlibrary/readme\n# Add a field \"version\". You can set it to the tiddlywiki version your plugin is compatible with for example.\n# Confirm your changes, then drag and drop the plugin in your plugin library","tags":"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq $:/plugins/theophile.dev/tiddlyhostpluginlibrary","caption":"How to create a plugin ?"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/icon":{"text":"{{$:/core/images/plugin-generic-theme}}"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/packager":{"text":"{{$:/plugins/theophile.dev/plugin-maker/packager}}"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/script":{"text":"`<script>\n/*\\ \ntitle: $:/plugins/tiddlywiki/pluginlibrary/libraryserver.js \ntype: application/javascript \nmodule-type: library \n\nA simple HTTP-over-window.postMessage implementation of a standard TiddlyWeb-compatible server. \nIt uses real HTTP to load the individual tiddler JSON files. \n\\*/\n(function () {\n  /*jslint node: true, browser: true */\n  /*global $tw: false */\n  \"use strict\";\n\n  var assetList = [`{{$:/plugins/theophile.dev/tiddlyhostpluginlibrary/assetList}}`];\n\n  // Listen for window messages\n  window.addEventListener(\n    \"message\",\n    function listener(event) {\n      console.log(\"plugin library: Received message from\", event.origin);\n      console.log(\"plugin library: Message content\", event.data);\n      switch (event.data.verb) {\n        case \"GET\":\n          if (event.data.url === \"recipes/library/tiddlers.json\") {\n            // Route for recipes/library/tiddlers.json\n            event.source.postMessage(\n              {\n                verb: \"GET-RESPONSE\",\n                status: \"200\",\n                cookies: event.data.cookies,\n                url: event.data.url,\n                type: \"application/json\",\n                body: JSON.stringify(assetList, null, 4),\n              },\n              \"*\"\n            );\n          } else if (event.data.url.indexOf(\"recipes/library/tiddlers/\") === 0) {\n            var pluginTitle = removePrefix(\n              event.data.url,\n              \"recipes/library/tiddlers/\"\n            );\n\n            // Strip the `.json` suffix if present\n            if (pluginTitle.endsWith(\".json\")) {\n              pluginTitle = pluginTitle.slice(0, -5); // Remove the last 5 characters (\".json\")\n            }\n\n            var url =\n              \"`{{$:/SiteUrl}}`/tiddlers.json?title=\" +\n              pluginTitle +\n              \"&pretty=1&include_system=1\";\n\n            // Route for recipes/library/tiddlers/<uri-encoded-tiddler-title>.json\n            httpGet(url, function (err, responseText) {\n              if (err) {\n                event.source.postMessage(\n                  {\n                    verb: \"GET-RESPONSE\",\n                    status: \"404\",\n                    cookies: event.data.cookies,\n                    url: event.data.url,\n                    type: \"text/plain\",\n                    body: \"Not found\",\n                  },\n                  \"*\"\n                );\n              } else {\n                var cleanedResponse = stripOuterBrackets(responseText);\n                event.source.postMessage(\n                  {\n                    verb: \"GET-RESPONSE\",\n                    status: \"200\",\n                    cookies: event.data.cookies,\n                    url: event.data.url,\n                    type: \"application/json\",\n                    body: cleanedResponse,\n                  },\n                  \"*\"\n                );\n              }\n            });\n          } else {\n            event.source.postMessage(\n              {\n                verb: \"GET-RESPONSE\",\n                status: \"404\",\n                cookies: event.data.cookies,\n                url: event.data.url,\n                type: \"text/plain\",\n                body: \"Not found\",\n              },\n              \"*\"\n            );\n          }\n          break;\n      }\n    },\n    false\n  );\n\n  // Helper to remove string prefixes\n  function removePrefix(string, prefix) {\n    if (string.indexOf(prefix) === 0) {\n      return string.substr(prefix.length);\n    } else {\n      return string;\n    }\n  }\n\n  // Helper to strip outer brackets `[]` from JSON response\n  function stripOuterBrackets(jsonString) {\n    try {\n      var parsed = JSON.parse(jsonString);\n      if (Array.isArray(parsed) && parsed.length === 1) {\n        return JSON.stringify(parsed[0], null, 4); // Return the first (and only) object in the array\n      }\n      return jsonString; // Return as-is if not an array or has multiple items\n    } catch (error) {\n      console.error(\"Error parsing JSON:\", error);\n      return jsonString; // Return original string if parsing fails\n    }\n  }\n\n  // Helper for HTTP GET\n  function httpGet(url, callback) {\n    var http = new XMLHttpRequest();\n    http.open(\"GET\", url, true);\n    http.onreadystatechange = function () {\n      if (http.readyState == 4) {\n        if (http.status == 200) {\n          callback(null, http.responseText);\n        } else {\n          callback(new Error(\"HTTP error: \" + http.status), null);\n        }\n      }\n    };\n    http.send();\n  }\n})();\n</script>`","tags":"$:/tags/RawMarkupWikified/TopHead $:/plugins/theophile.dev/tiddlyhostpluginlibrary","code-body":"yes"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/settings":{"text":"Library name: <$edit tag=\"input\" tiddler=\"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/readme\" field=\"caption\"/>\n\n\n[[Filter expression|https://tiddlywiki.com/static/Filters.html]] for listing the plugins to be included:\n<$edit tag=\"textarea\" tiddler=\"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/assetList\" field=\"filter\" class=\"tc-edit-texteditor tc-edit-texteditor-body\"/>\n\n{{$:/plugins/theophile.dev/tiddlyhostpluginlibrary/PluginsIncluded}}","tags":"$:/plugins/theophile.dev/tiddlyhostpluginlibrary"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/updatelibrary":{"text":"<!--\nThis tiddler update the url of the library tiddler to keep it in sync with the current url of the wiki.\n-->\n<$action-setfield \n$tiddler=\"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/readme\" \nurl={{$:/info/url/full}}\n/>","tags":"$:/tags/StartupAction $:/plugins/theophile.dev/tiddlyhostpluginlibrary","code-body":"yes"},"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/readme":{"text":"This tiddlywiki is a [[tiddlyhost plugin library|$:/plugins/theophile.dev/tiddlyhostpluginlibrary/faq/how]]!\n\n<$tiddler tiddler=\"$:/plugins/theophile.dev/tiddlyhostpluginlibrary/readme\">\nDrag and drop <$link>this link</$link> in your wiki to install it.\n</$tiddler>","tags":"$:/tags/PluginLibrary $:/plugins/theophile.dev/tiddlyhostpluginlibrary","url":"https://plugin-library.tiddlyhost.com/","caption":"Tiddlyhost Plugin Library","filter":"[plugin-type[plugin]] -$:/core"}}}